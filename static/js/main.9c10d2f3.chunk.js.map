{"version":3,"sources":["redux/reducers/teacher-reducer.js","redux/reducers/combine.js","redux/store/store.js","panels/RolesSelect.js","panels/teacher/components/Clubs.js","panels/teacher/Profile.js","panels/teacher/forms/AddClub.js","redux/actions/teacher-actions.js","panels/teacher/forms/AddStudyGroup.js","panels/teacher/forms/AddStudent.js","panels/teacher/components/Groups.js","panels/teacher/components/Students.js","panels/teacher/screens/Club.js","panels/teacher/screens/GroupOfClub.js","panels/student/Profile.js","App.js","index.js"],"names":["initialState","clubs","students","teacher","state","action","type","club","groups","push","name","club_name","group","student","group_name","reducers","combineReducers","teacherState","teacherReducer","store","createStore","roles","RolesSelect","id","go","fetchedUser","useState","role","setRole","roleId","setRoleId","Panel","PanelHeader","Group","FormLayout","FormItem","top","Select","placeholder","onChange","e","currentTarget","value","options","map","label","renderOption","option","restProps","CustomSelectOption","Div","Button","stretched","size","onClick","data-to","Clubs","key","data-clubid","TeacherProfile","getState","style","display","flexDirection","alignItems","justifyContent","textAlign","padding","src","photo_200","marginBottom","marginTop","level","weight","first_name","last_name","color","mode","before","width","height","header","length","AddClub","setName","left","Math","floor","random","dispatch","addClub_action","AddStudyGroup","addGroup_action","AddStudent","firstname","setFirstname","lastname","setLastname","addStudent_action","data-groupid","Groups","Students","data-studentid","Club","getStudentsOfClub","getGroupsOfClub","GroupOfClub","getStudentsOfGroup","StudentProfile","student_id","toString","getStudent","description","App","activePanel","setActivePanel","setUser","clubId","setClubId","groupId","setGroupId","studentId","setStudentId","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","dataset","clubid","groupid","studentid","to","View","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9c10d2f3.chunk.js","sourcesContent":["const initialState = {\r\n    clubs: [],\r\n    students: []\r\n}\r\n\r\nfunction teacher(state=initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_CLUB': {\r\n            action.club.groups = []\r\n            action.club.students = []\r\n            state.clubs.push(action.club)\r\n            return state\r\n        }\r\n        case 'ADD_GROUP': {\r\n            for (const club of state.clubs) {\r\n                if (club.name === action.club_name) {\r\n                    action.group.students = []\r\n                    club.groups.push(action.group)\r\n                    break\r\n                }\r\n            }\r\n            return state\r\n        }\r\n        case 'ADD_STUDENT': {\r\n            for (const club of state.clubs) {\r\n                if (club.name === action.club_name) {\r\n                    club.students.push(action.student)\r\n                    for (const group of club.groups) {\r\n                        if (group.name === action.group_name) {\r\n                            group.students.push(action.student)\r\n                            state.students.push(action.student)\r\n                            break\r\n                        }\r\n                    }\r\n                    break\r\n                }\r\n            }\r\n            return state\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default teacher;","import {combineReducers} from 'redux'\r\n\r\nimport teacherReducer from './teacher-reducer'\r\n\r\nconst reducers = combineReducers({\r\n    teacherState: teacherReducer\r\n})\r\n\r\nexport default reducers","import {createStore} from 'redux'\r\nimport reducers from '../reducers/combine'\r\n\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useState} from 'react';\r\n\r\nimport Select from '@vkontakte/vkui/dist/components/Select/Select';\r\nimport { FormItem } from '@vkontakte/vkui/dist/components/FormItem/FormItem';\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\r\nimport CustomSelectOption from '@vkontakte/vkui/dist/components/CustomSelectOption/CustomSelectOption';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nconst roles = [\r\n    {\r\n        'type': 'Учитель',\r\n        'value': 'teacher'\r\n    },\r\n    {\r\n        'type': 'Обучающийся',\r\n        'value': 'student'\r\n    },\r\n    {\r\n        'type': 'Родитель',\r\n        'value': 'parent'\r\n    }\r\n]\r\n\r\nconst RolesSelect = ({ id, go, fetchedUser }) => {\r\n\tconst [role, setRole] = useState('');\r\n\tconst [roleId, setRoleId] = useState(null)\r\n\r\n\tconst onChangeRole = (e) => {\r\n\t\tsetRole(e.currentTarget.value)\r\n\t\tsetRoleId(`${e.currentTarget.value}_profile`)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader>\r\n\t\t\t\tВыбор роли\r\n\t\t\t</PanelHeader>\r\n\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<FormItem top=\"Выберите роль\">\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tplaceholder=\"Роль не выбрана\" \r\n\t\t\t\t\t\t\tonChange={onChangeRole}\r\n\t\t\t\t\t\t\tvalue={role}\r\n\t\t\t\t\t\t\toptions={roles.map(role => ({ label: role.type, value: role.value }))}\r\n\t\t\t\t\t\t\trenderOption={({ option, ...restProps }) => (\r\n\t\t\t\t\t\t\t\t<CustomSelectOption {...restProps} />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t</FormLayout>\r\n\t\t\t\t{role === 'teacher' &&\r\n\t\t\t\t<Div>\r\n\t\t\t\t\t<Button stretched size=\"l\" onClick={go} data-to={roleId}>\r\n\t\t\t\t\t\tПродолжить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Div>}\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nRolesSelect.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default RolesSelect;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    SimpleCell\r\n} from '@vkontakte/vkui'\r\n\r\nconst Clubs = ({ go, clubs }) => {\r\n\r\n    return clubs.map(\r\n        (club) =>\r\n            <SimpleCell key={club.name} onClick={go} data-to=\"club\" data-clubid={club.name}>\r\n                {club.name ? club.name : ''}\r\n            </SimpleCell>\r\n    )\r\n}\r\n\r\nClubs.propTypes = {\r\n    clubs: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Clubs","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Text,\r\n    Title,\r\n    Avatar,\r\n    Div,\r\n    Cell,\r\n    Group,\r\n    Button,\r\n    Header,\r\n    PanelHeader,\r\n    Panel,\r\n    Gradient,\r\n    CellButton,\r\n    CardGrid\r\n  } from \"@vkontakte/vkui\"\r\n\r\n  import {\r\n    Icon20FavoriteCircleFillYellow,\r\n    Icon28AddOutline,\r\n    Icon20CalendarOutline,\r\n    Icon24LightbulbStarOutline\r\n  } from \"@vkontakte/icons\"\r\n  \r\n  import Clubs from './components/Clubs'\r\n\r\n\r\nconst TeacherProfile = ({ id, go, fetchedUser, store }) => {\r\n    //const clubs = useSelector(state => state.clubs)\r\n    const clubs = store.getState().teacherState.clubs\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader>Профиль учителя</PanelHeader>\r\n\r\n            <Group>\r\n                <Gradient style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                    padding: 32,\r\n                }}>\r\n                    <Avatar size={96} src={fetchedUser && fetchedUser.photo_200 ? fetchedUser.photo_200 : ''} />\r\n                    <Title style={{ marginBottom: 8, marginTop: 20 }} level=\"2\" weight=\"medium\">{\r\n                        `${fetchedUser && fetchedUser.first_name ? fetchedUser.first_name : ''} \r\n                        ${fetchedUser && fetchedUser.last_name ? fetchedUser.last_name : ''}`}\r\n                    </Title>\r\n                    <Text style={{ marginBottom: 24, color: 'var(--text_secondary)' }}>Инфо</Text>\r\n                    <Button size=\"m\" mode=\"secondary\">Редактировать</Button>\r\n                </Gradient>\r\n\r\n                <CellButton before={<Icon20FavoriteCircleFillYellow width={22} height={22} />}>Рейтинг учеников</CellButton>\r\n                <CellButton before={<Icon24LightbulbStarOutline width={22} height={22} />}>Отметить достижения учеников</CellButton>\r\n                <CellButton before={<Icon20CalendarOutline width={22} height={22} />}>Расписание занятий</CellButton>\r\n                <CellButton before={<Icon28AddOutline width={22} height={22} />} onClick={go} data-to={'teacher_addClub'}>Добавить секцию</CellButton>\r\n            </Group>\r\n\r\n            <Group\r\n                header={<Header>Мои секции</Header>}\r\n            >\r\n                {clubs.length > 0 &&\r\n                    <Clubs go={go} clubs={clubs} />\r\n                }\r\n                {clubs.length === 0 &&\r\n                    <Div>\r\n                        <Text>Секции отсутствуют</Text>\r\n                    </Div>\r\n                }\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\n/*\r\n<Group mode=\"plain\">\r\n                <Header>Учебные заведения и классы</Header>\r\n                <SimpleCell before={<Icon28SchoolOutline />} description=\"Екатеринбург\">Школа №180</SimpleCell>\r\n                <CellButton before={<Icon28AddOutline />}>Добавить учебное заведение</CellButton>\r\n            </Group>\r\n*/\r\n\r\nTeacherProfile.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default TeacherProfile;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { addClub as addClub_action } from '../../../redux/actions/teacher-actions'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n    Group,\r\n    FormLayout,\r\n    FormItem,\r\n    Input,\r\n    Button,\r\n    Div,\r\n    FormLayoutGroup,\r\n    Select,\r\n    Checkbox\r\n  } from \"@vkontakte/vkui\"\r\n\r\nconst AddClub = ({ id, go, fetchedUser, store }) => {\r\n    const[name, setName] = useState('')\r\n\r\n    const onchangeName = (e) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n\r\n    const addClub = () => {\r\n        const club = {\r\n            'name': name,\r\n            'id': Math.floor(Math.random() * 10000)\r\n        }\r\n        store.dispatch(addClub_action(club))\r\n        go({'currentTarget': {'dataset': {'to': 'teacher_profile'}}})\r\n    }\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"teacher_profile\"/>}\r\n            >\r\n\t\t\t\tДобавить секцию\r\n\t\t\t</PanelHeader>\r\n\r\n            <Group>\r\n                <FormLayout>\r\n                    <FormItem top=\"Название\">\r\n                        <Input onChange={onchangeName} />\r\n                    </FormItem>\r\n                    <FormItem top=\"Направление\">\r\n                        <Select\r\n                            options={[{\r\n                                value: '0', label: 'Программирование и робототехника' }, { \r\n                                value: '1', label: 'Единоборства' }, {\r\n                                value: '2', label: 'Другое' }\r\n                            ]}\r\n                        />\r\n                    </FormItem>\r\n\r\n                    <FormLayoutGroup mode=\"horizontal\" top=\"Возрастные ограничения\">\r\n                        <FormItem top=\"От (лет)\">            \r\n                            <Input />\r\n                        </FormItem>\r\n                        <FormItem top=\"До (лет)\">            \r\n                            <Input />\r\n                        </FormItem>\r\n                    </FormLayoutGroup>\r\n                    <Checkbox>Без возрастных ограничений</Checkbox>\r\n                </FormLayout>\r\n\r\n                <FormItem>\r\n                    <Button size=\"l\" stretched onClick={addClub}>Добавить секцию</Button>\r\n                </FormItem>\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nAddClub.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default AddClub;\r\n","export function addClub (club) {\r\n    return {\r\n        type: 'ADD_CLUB',\r\n        club,\r\n    };\r\n}\r\n\r\nexport function addGroup (group, club_name) {\r\n    return {\r\n        type: 'ADD_GROUP',\r\n        group,\r\n        club_name\r\n    };\r\n}\r\n\r\nexport function addStudent (student, group_name, club_name) {\r\n    return {\r\n        type: 'ADD_STUDENT',\r\n        student,\r\n        group_name,\r\n        club_name\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { addGroup as addGroup_action } from '../../../redux/actions/teacher-actions'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n\tGroup,\r\n\tFormLayout,\r\n\tFormItem,\r\n\tInput,\r\n\tButton\r\n  } from \"@vkontakte/vkui\"\r\n\r\nconst AddStudyGroup = ({ id, go, fetchedUser, club_name, store }) => {\r\n\tconst[name, setName] = useState('')\r\n\r\n    const onchangeName = (e) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n\r\n    const addGroup= () => {\r\n        const group = {\r\n            'name': name,\r\n\t\t\t'id': Math.floor(Math.random() * 10000)\r\n        }\r\n        store.dispatch(addGroup_action(group, club_name))\r\n        go({'currentTarget': {'dataset': {'to': 'club'}}})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"club\"/>}\r\n            >\r\n\t\t\t\tДобавить группу\r\n\t\t\t</PanelHeader>\r\n\r\n\t\t\t<Group>\r\n                <FormLayout>\r\n                    <FormItem top=\"Название\">\r\n                        <Input onChange={onchangeName} />\r\n                    </FormItem>\r\n                </FormLayout>\r\n\r\n                <FormItem>\r\n                    <Button size=\"l\" stretched onClick={addGroup}>Добавить группу</Button>\r\n                </FormItem>\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nAddStudyGroup.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default AddStudyGroup\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { addStudent as addStudent_action } from '../../../redux/actions/teacher-actions'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n    Group,\r\n    FormLayout,\r\n    FormItem,\r\n    Input,\r\n    Button,\r\n    Div,\r\n    Text\r\n  } from \"@vkontakte/vkui\"\r\n\r\nconst AddStudent = ({ id, go, fetchedUser, store, group_name, club_name }) => {\r\n\tconst[firstname, setFirstname] = useState('')\r\n\tconst[lastname, setLastname] = useState('')\r\n\r\n    const onChangeFirstname = e => {\r\n        setFirstname(e.currentTarget.value)\r\n    }\r\n\tconst onChangeSecondname = e => {\r\n\t\tsetLastname(e.currentTarget.value)\r\n\t}\r\n\r\n    const addStudent= () => {\r\n        const student = {\r\n            'firstname': firstname,\r\n\t\t\t'lastname': lastname,\r\n\t\t\t'id': Math.floor(Math.random() * 10000),\r\n            'clubs': {\r\n                'name': club_name,\r\n                'groups': group_name\r\n            }\r\n        }\r\n        store.dispatch(addStudent_action(student, group_name, club_name))\r\n        go({'currentTarget': {'dataset': {'to': 'group'}}})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"group\"/>}\r\n            >\r\n\t\t\t\tДобавить ученика\r\n\t\t\t</PanelHeader>\r\n\r\n\t\t\t<Group>\r\n                <FormLayout>\r\n                    <FormItem top=\"Имя\">\r\n                        <Input onChange={onChangeFirstname} />\r\n                    </FormItem>\r\n\t\t\t\t\t<FormItem top=\"Фамилия\">\r\n                        <Input onChange={onChangeSecondname} />\r\n                    </FormItem>\r\n                </FormLayout>\r\n\r\n                <Div><Text>Должен быть поиск по пользователям ВК для инвайта, но пока что мок</Text></Div>\r\n\r\n                <FormItem>\r\n                    <Button size=\"l\" stretched onClick={addStudent} data-clubid={club_name} data-groupid={group_name}>Добавить ученика</Button>\r\n                </FormItem>\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nAddStudent.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tclub_name: PropTypes.string.isRequired,\r\n\tgroup_name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AddStudent;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    SimpleCell\r\n} from '@vkontakte/vkui'\r\n\r\nconst Groups = ({ go, groups, club_name }) => {\r\n\r\n    return groups.map(\r\n        (group) =>\r\n            <SimpleCell key={group.name} onClick={go} data-to=\"group\" data-clubid={club_name} data-groupid={group.name}>\r\n                {group.name ? group.name : ''}\r\n            </SimpleCell>\r\n    )\r\n}\r\n\r\nGroups.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    club_name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Groups","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Avatar,\r\n    SimpleCell\r\n} from '@vkontakte/vkui'\r\n\r\nconst Students = ({ go, students, club_name, group_name }) => {\r\n\r\n    return students.map(\r\n        // onClick={go} data-to=\"student_profile\" data-studentid={student.id}\r\n        (student) => \r\n            <SimpleCell key={student.id} before={<Avatar size={40}/>} onClick={go} data-to=\"teacher_student\" data-studentid={student.id}>\r\n                {`${student.firstname ? student.firstname : ''} ${student.lastname ? student.lastname  : ''}`}\r\n            </SimpleCell>\r\n    )\r\n}\r\n\r\nStudents.propTypes = {\r\n    students: PropTypes.array.isRequired,\r\n    club_name: PropTypes.string.isRequired,\r\n    //group_name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Students","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Groups from '../components/Groups'\r\nimport Students from '../components/Students'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n    CellButton,\r\n    Group,\r\n    Text,\r\n    FormLayout,\r\n    FormItem,\r\n    Input,\r\n    Button,\r\n    Div,\r\n    Header\r\n  } from \"@vkontakte/vkui\"\r\n\r\n  import {\r\n    Icon28AddOutline\r\n  } from \"@vkontakte/icons\"\r\n\r\nconst Club = ({ id, go, fetchedUser, store, club_name }) => {\r\n    const getGroupsOfClub = () => {\r\n        const clubs = store.getState().teacherState.clubs\r\n        for (const club of clubs) {\r\n            if (club.name === club_name) {\r\n                return club.groups ? club.groups : null\r\n            }\r\n        }\r\n    }\r\n\r\n    const getStudentsOfClub = () => {\r\n        const clubs = store.getState().teacherState.clubs\r\n        for (const club of clubs) {\r\n            if (club.name === club_name) {\r\n                return club.students ? club.students : null\r\n            }\r\n        }\r\n    }\r\n\r\n    const students = getStudentsOfClub()\r\n    const groups = getGroupsOfClub()\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"teacher_profile\"/>}\r\n            >\r\n\t\t\t\tСекция \"{club_name ? club_name : ''}\"\r\n\t\t\t</PanelHeader>\r\n\r\n            <Div>\r\n                <CellButton before={<Icon28AddOutline width={22} height={22} />} onClick={go} data-to={'teacher_addStudyGroup'} data-clubid={club_name}>Добавить учебную группу</CellButton>\r\n            </Div>\r\n\r\n            <Group\r\n                header={<Header>Мои группы</Header>}\r\n            >\r\n                {groups && groups.length > 0 &&\r\n                    <Groups go={go} groups={groups} club_name={club_name} />\r\n                }\r\n                {!groups || groups.length === 0 &&\r\n                    <Div>\r\n                        <Text>Группы отсутствуют</Text>\r\n                    </Div>\r\n                }\r\n            </Group>\r\n            <Group\r\n                header={<Header>Ученики секции {club_name}</Header>}\r\n            >\r\n                {students && students.length > 0 &&\r\n                    <Students go={go} students={students} club_name={club_name} />\r\n                }\r\n                {!students || students.length === 0 &&\r\n                    <Div>\r\n                        <Text>Ученики отсутствуют</Text>\r\n                    </Div>\r\n                }\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nClub.propTypes = {\r\n    club_name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Club;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Students from '../components/Students'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n    CellButton,\r\n    Group,\r\n    Text,\r\n    FormLayout,\r\n    FormItem,\r\n    Input,\r\n    Button,\r\n    Div,\r\n    Header\r\n  } from \"@vkontakte/vkui\"\r\n\r\n  import {\r\n    Icon28AddOutline\r\n  } from \"@vkontakte/icons\"\r\n\r\nconst GroupOfClub = ({ id, go, fetchedUser, store, club_name, group_name }) => {\r\n    const getStudentsOfGroup = () => {\r\n        const clubs = store.getState().teacherState.clubs\r\n        for (const club of clubs) {\r\n            if (club.name === club_name) {\r\n                for (const group of club.groups)\r\n                    if (group.name === group_name) {\r\n                        return group.students ? group.students : null\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n    const students = getStudentsOfGroup()\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"club\" data-clubid={club_name}/>}\r\n            >\r\n\t\t\t\tУченики\r\n\t\t\t</PanelHeader>\r\n\r\n            <Div>\r\n                <CellButton before={<Icon28AddOutline width={22} height={22} />}>Добавить занятие</CellButton>\r\n                <CellButton before={<Icon28AddOutline width={22} height={22} />} onClick={go} data-to={'teacher_addStudent'} data-clubid={club_name} data-groupid={group_name}>Добавить ученика</CellButton>\r\n            </Div>\r\n\r\n            <Group\r\n                header={<Header>Ученики группы {group_name}</Header>}\r\n            >\r\n                {students && students.length > 0 &&\r\n                    <Students go={go} students={students} club_name={club_name} group_name={group_name} />\r\n                }\r\n                {!students || students.length === 0 &&\r\n                    <Div>\r\n                        <Text>Ученики отсутствуют</Text>\r\n                    </Div>\r\n                }\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nGroupOfClub.propTypes = {\r\n    club_name: PropTypes.string.isRequired,\r\n    group_name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GroupOfClub;\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Text,\r\n    Title,\r\n    Avatar,\r\n    Div,\r\n    Cell,\r\n    Group,\r\n    Button,\r\n    Header,\r\n    PanelHeader,\r\n    PanelHeaderBack,\r\n    Panel,\r\n    Gradient,\r\n    CellButton,\r\n    CardGrid,\r\n    RichCell\r\n  } from \"@vkontakte/vkui\"\r\n\r\n  import {\r\n    Icon20FavoriteCircleFillYellow,\r\n    Icon28LightbulbCircleFillYellow \r\n  } from \"@vkontakte/icons\"\r\n\r\nconst StudentProfile = ({ id, go, fetchedUser, store, student_id }) => {\r\n    const getStudent = () => {\r\n        const students = store.getState().teacherState.students\r\n        for (const student of students) {\r\n            if ((student.id).toString() === student_id) {\r\n                return student ? student : null\r\n            }\r\n        }\r\n    }\r\n\r\n    const student = getStudent()\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"group\"/>}\r\n            >\r\n                Профиль ученика\r\n            </PanelHeader>\r\n\r\n            <Group>\r\n                <Gradient style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                    padding: 32,\r\n                }}>\r\n                    <Avatar />\r\n                    <Title style={{ marginBottom: 8, marginTop: 20 }} level=\"2\" weight=\"medium\">{\r\n                        `${student && student.firstname ? student.firstname : ''} \r\n                        ${student && student.lastname ? student.lastname : ''}`}\r\n                    </Title>\r\n                    <Text style={{ marginBottom: 24, color: 'var(--text_secondary)' }}>Инфо</Text>\r\n                    <Button size=\"m\" mode=\"secondary\">Редактировать</Button>\r\n                </Gradient>\r\n            </Group>\r\n            <Group>\r\n                <Cell before={<Icon20FavoriteCircleFillYellow width={26} height={26} />} description={`Секция ${student.clubs.name}, группа ${student.clubs.groups}`}>1-ое место в рейтинге</Cell>\r\n            </Group>\r\n            <Group\r\n                header={<Header>Личные достижения</Header>}\r\n            >\r\n                <Cell before={<Icon28LightbulbCircleFillYellow width={26} height={26} />} description={`Петербургский молодежный форум`}>1-ое место на выставке проектов</Cell>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\n/*\r\n<Group\r\n                header={<Header>Мои секции</Header>}\r\n            >\r\n                {clubs.length > 0 &&\r\n                    <Clubs go={go} clubs={clubs} />\r\n                }\r\n                {clubs.length === 0 &&\r\n                    <Div>\r\n                        <Text>Секции отсутствуют</Text>\r\n                    </Div>\r\n                }\r\n            </Group>\r\n*/\r\n\r\n/*\r\n<Group mode=\"plain\">\r\n                <Header>Учебные заведения и классы</Header>\r\n                <SimpleCell before={<Icon28SchoolOutline />} description=\"Екатеринбург\">Школа №180</SimpleCell>\r\n                <CellButton before={<Icon28AddOutline />}>Добавить учебное заведение</CellButton>\r\n            </Group>\r\n*/\r\n\r\nStudentProfile.propTypes = {\r\n\r\n};\r\n\r\nexport default StudentProfile;\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport store from './redux/store/store'\n\nimport RolesSelect from './panels/RolesSelect'\n\n//Учитель\nimport TeacherProfile from './panels/teacher/Profile'\n//Формы\nimport AddClub from './panels/teacher/forms/AddClub'\nimport AddStudyGroup from './panels/teacher/forms/AddStudyGroup'\nimport AddStudent from './panels/teacher/forms/AddStudent'\n//Экраны\nimport Club from './panels/teacher/screens/Club'\nimport GroupOfClub from './panels/teacher/screens/GroupOfClub'\n//Ученик учителя\nimport StudentProfile from './panels/student/Profile'\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('role');\n\tconst [fetchedUser, setUser] = useState(null)\n\tconst [clubId, setClubId] = useState('')\n\tconst [groupId, setGroupId] = useState('')\n\tconst [studentId, setStudentId] = useState('')\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tif (e.currentTarget.dataset.clubid) {\n\t\t\tsetClubId(e.currentTarget.dataset.clubid)\n\t\t}\n\t\tif (e.currentTarget.dataset.groupid) {\n\t\t\tsetGroupId(e.currentTarget.dataset.groupid)\n\t\t}\n\t\tif (e.currentTarget.dataset.studentid) {\n\t\t\tsetStudentId(e.currentTarget.dataset.studentid)\n\t\t}\n\t\tsetActivePanel(e.currentTarget.dataset.to)\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t<RolesSelect id='role' fetchedUser={fetchedUser} go={go} store={store}/>\n\n\t\t\t\t\t<TeacherProfile id=\"teacher_profile\" fetchedUser={fetchedUser} go={go} store={store}/>\n\t\t\t\t\t<AddClub id=\"teacher_addClub\" fetchedUser={fetchedUser} go={go} store={store}/>\n\t\t\t\t\t<AddStudyGroup id=\"teacher_addStudyGroup\" fetchedUser={fetchedUser} go={go} store={store} club_name={clubId}/>\n\t\t\t\t\t<AddStudent id=\"teacher_addStudent\" fetchedUser={fetchedUser} go={go} store={store} club_name={clubId} group_name={groupId}/>\n\t\t\t\t\t<Club id=\"club\" fetchedUser={fetchedUser} go={go} store={store} club_name={clubId} />\n\t\t\t\t\t<GroupOfClub id=\"group\" fetchedUser={fetchedUser} go={go} store={store} club_name={clubId} group_name={groupId}/>\n\t\t\t\t\t<StudentProfile id=\"teacher_student\" fetchedUser={fetchedUser} go={go} store={store} student_id={studentId} />\n\t\t\t\t\t\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}