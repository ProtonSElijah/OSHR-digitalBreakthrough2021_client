{"version":3,"sources":["redux/reducers/teacher-reducer.js","redux/reducers/combine.js","redux/store/store.js","panels/RolesSelect.js","panels/teacher/components/Clubs.js","panels/teacher/Profile.js","panels/teacher/forms/AddClub.js","redux/actions/teacher-actions.js","panels/teacher/forms/AddStudyGroup.js","panels/teacher/forms/AddStudent.js","panels/teacher/components/Groups.js","panels/teacher/screens/Club.js","panels/teacher/components/Students.js","panels/teacher/screens/GroupOfClub.js","App.js","index.js"],"names":["initialState","clubs","teacher","state","action","type","club","groups","students","push","name","club_name","group","student","group_name","reducers","combineReducers","teacherState","teacherReducer","store","createStore","roles","RolesSelect","id","go","fetchedUser","useState","role","setRole","roleId","setRoleId","Panel","PanelHeader","Group","FormLayout","FormItem","top","Select","placeholder","onChange","e","currentTarget","value","options","map","label","renderOption","option","restProps","CustomSelectOption","Div","Button","stretched","size","onClick","data-to","Clubs","key","data-clubid","TeacherProfile","getState","style","display","flexDirection","alignItems","justifyContent","textAlign","padding","src","photo_200","marginBottom","marginTop","level","weight","first_name","last_name","color","mode","before","header","length","AddClub","setName","left","dispatch","addClub_action","AddStudyGroup","addGroup_action","AddStudent","firstname","setFirstname","lastname","setLastname","Math","floor","random","addStudent_action","data-groupid","Groups","Club","getGroupsOfClub","Students","data-studentid","GroupOfClub","getStudentsOfGroup","App","activePanel","setActivePanel","setUser","clubId","setClubId","groupId","setGroupId","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","dataset","clubid","groupid","to","View","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3faa954.chunk.js","sourcesContent":["const initialState = {\r\n    clubs: []\r\n}\r\n\r\nfunction teacher(state=initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_CLUB': {\r\n            action.club.groups = []\r\n            action.club.students = []\r\n            state.clubs.push(action.club)\r\n            return state\r\n        }\r\n        case 'ADD_GROUP': {\r\n            for (const club of state.clubs) {\r\n                if (club.name === action.club_name) {\r\n                    action.group.students = []\r\n                    club.groups.push(action.group)\r\n                    break\r\n                }\r\n            }\r\n            return state\r\n        }\r\n        case 'ADD_STUDENT': {\r\n            for (const club of state.clubs) {\r\n                if (club.name === action.club_name) {\r\n                    club.students.push(action.student)\r\n                    for (const group of club.groups) {\r\n                        if (group.name === action.group_name) {\r\n                            group.students.push(action.student)\r\n                            break\r\n                        }\r\n                    }\r\n                    break\r\n                }\r\n            }\r\n            return state\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default teacher;","import {combineReducers} from 'redux'\r\n\r\nimport teacherReducer from './teacher-reducer'\r\n\r\nconst reducers = combineReducers({\r\n    teacherState: teacherReducer\r\n})\r\n\r\nexport default reducers","import {createStore} from 'redux'\r\nimport reducers from '../reducers/combine'\r\n\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useState} from 'react';\r\n\r\nimport Select from '@vkontakte/vkui/dist/components/Select/Select';\r\nimport { FormItem } from '@vkontakte/vkui/dist/components/FormItem/FormItem';\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\r\nimport CustomSelectOption from '@vkontakte/vkui/dist/components/CustomSelectOption/CustomSelectOption';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nconst roles = [\r\n    {\r\n        'type': 'Учитель',\r\n        'value': 'teacher'\r\n    },\r\n    {\r\n        'type': 'Обучающийся',\r\n        'value': 'student'\r\n    },\r\n    {\r\n        'type': 'Родитель',\r\n        'value': 'parent'\r\n    }\r\n]\r\n\r\nconst RolesSelect = ({ id, go, fetchedUser }) => {\r\n\tconst [role, setRole] = useState('');\r\n\tconst [roleId, setRoleId] = useState(null)\r\n\r\n\tconst onChangeRole = (e) => {\r\n\t\tsetRole(e.currentTarget.value)\r\n\t\tsetRoleId(`${e.currentTarget.value}_profile`)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader>\r\n\t\t\t\tВыбор роли\r\n\t\t\t</PanelHeader>\r\n\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\t\t\t\t\t<FormItem top=\"Выберите роль\">\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tplaceholder=\"Роль не выбрана\" \r\n\t\t\t\t\t\t\tonChange={onChangeRole}\r\n\t\t\t\t\t\t\tvalue={role}\r\n\t\t\t\t\t\t\toptions={roles.map(role => ({ label: role.type, value: role.value }))}\r\n\t\t\t\t\t\t\trenderOption={({ option, ...restProps }) => (\r\n\t\t\t\t\t\t\t\t<CustomSelectOption {...restProps} />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t</FormLayout>\r\n\t\t\t\t{role === 'teacher' &&\r\n\t\t\t\t<Div>\r\n\t\t\t\t\t<Button stretched size=\"l\" onClick={go} data-to={roleId}>\r\n\t\t\t\t\t\tПродолжить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Div>}\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nRolesSelect.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default RolesSelect;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    SimpleCell\r\n} from '@vkontakte/vkui'\r\n\r\nconst Clubs = ({ go, clubs }) => {\r\n\r\n    return clubs.map(\r\n        (club) =>\r\n            <SimpleCell key={club.name} onClick={go} data-to=\"club\" data-clubid={club.name}>\r\n                {club.name ? club.name : ''}\r\n            </SimpleCell>\r\n    )\r\n}\r\n\r\nClubs.propTypes = {\r\n    clubs: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Clubs","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Text,\r\n    Title,\r\n    Avatar,\r\n    Div,\r\n    Cell,\r\n    Group,\r\n    Button,\r\n    Header,\r\n    PanelHeader,\r\n    Panel,\r\n    Gradient,\r\n    CellButton,\r\n    CardGrid\r\n  } from \"@vkontakte/vkui\"\r\n\r\n  import {\r\n    Icon28AddOutline\r\n  } from \"@vkontakte/icons\"\r\n\r\n  import Clubs from './components/Clubs'\r\n\r\n\r\nconst TeacherProfile = ({ id, go, fetchedUser, store }) => {\r\n    //const clubs = useSelector(state => state.clubs)\r\n    const clubs = store.getState().teacherState.clubs\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader>Профиль учителя</PanelHeader>\r\n\r\n            <Group>\r\n                <Gradient style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                    padding: 32,\r\n                }}>\r\n                    <Avatar size={96} src={fetchedUser && fetchedUser.photo_200 ? fetchedUser.photo_200 : ''} />\r\n                    <Title style={{ marginBottom: 8, marginTop: 20 }} level=\"2\" weight=\"medium\">{\r\n                        `${fetchedUser && fetchedUser.first_name ? fetchedUser.first_name : ''} \r\n                        ${fetchedUser && fetchedUser.last_name ? fetchedUser.last_name : ''}`}\r\n                    </Title>\r\n                    <Text style={{ marginBottom: 24, color: 'var(--text_secondary)' }}>Инфо</Text>\r\n                    <Button size=\"m\" mode=\"secondary\">Редактировать</Button>\r\n                </Gradient>\r\n\r\n                <CellButton before={<Icon28AddOutline />} onClick={go} data-to={'teacher_addClub'}>Добавить секцию</CellButton>\r\n            </Group>\r\n\r\n            <Group\r\n                header={<Header>Мои секции</Header>}\r\n            >\r\n                {clubs.length > 0 &&\r\n                    <Clubs go={go} clubs={clubs} />\r\n                }\r\n                {clubs.length === 0 &&\r\n                    <Div>\r\n                        <Text>Секции отсутствуют</Text>\r\n                    </Div>\r\n                }\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\n/*\r\n<Group mode=\"plain\">\r\n                <Header>Учебные заведения и классы</Header>\r\n                <SimpleCell before={<Icon28SchoolOutline />} description=\"Екатеринбург\">Школа №180</SimpleCell>\r\n                <CellButton before={<Icon28AddOutline />}>Добавить учебное заведение</CellButton>\r\n            </Group>\r\n*/\r\n\r\nTeacherProfile.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default TeacherProfile;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { addClub as addClub_action } from '../../../redux/actions/teacher-actions'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n    Group,\r\n    FormLayout,\r\n    FormItem,\r\n    Input,\r\n    Button\r\n  } from \"@vkontakte/vkui\"\r\n\r\nconst AddClub = ({ id, go, fetchedUser, store }) => {\r\n    const[name, setName] = useState('')\r\n\r\n    const onchangeName = (e) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n\r\n    const addClub = () => {\r\n        const club = {\r\n            'name': name\r\n        }\r\n        store.dispatch(addClub_action(club))\r\n        go({'currentTarget': {'dataset': {'to': 'teacher_profile'}}})\r\n    }\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"teacher_profile\"/>}\r\n            >\r\n\t\t\t\tДобавить секцию\r\n\t\t\t</PanelHeader>\r\n\r\n            <Group>\r\n                <FormLayout>\r\n                    <FormItem top=\"Название\">\r\n                        <Input onChange={onchangeName} />\r\n                    </FormItem>\r\n                </FormLayout>\r\n\r\n                <FormItem>\r\n                    <Button size=\"l\" stretched onClick={addClub}>Добавить секцию</Button>\r\n                </FormItem>\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nAddClub.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default AddClub;\r\n","export function addClub (club) {\r\n    return {\r\n        type: 'ADD_CLUB',\r\n        club,\r\n    };\r\n}\r\n\r\nexport function addGroup (group, club_name) {\r\n    return {\r\n        type: 'ADD_GROUP',\r\n        group,\r\n        club_name\r\n    };\r\n}\r\n\r\nexport function addStudent (student, group_name, club_name) {\r\n    return {\r\n        type: 'ADD_STUDENT',\r\n        student,\r\n        group_name,\r\n        club_name\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { addGroup as addGroup_action } from '../../../redux/actions/teacher-actions'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n\tGroup,\r\n\tFormLayout,\r\n\tFormItem,\r\n\tInput,\r\n\tButton\r\n  } from \"@vkontakte/vkui\"\r\n\r\nconst AddStudyGroup = ({ id, go, fetchedUser, club_name, store }) => {\r\n\tconst[name, setName] = useState('')\r\n\r\n    const onchangeName = (e) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n\r\n    const addGroup= () => {\r\n        const group = {\r\n            'name': name\r\n        }\r\n        store.dispatch(addGroup_action(group, club_name))\r\n        go({'currentTarget': {'dataset': {'to': 'club'}}})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"club\"/>}\r\n            >\r\n\t\t\t\tДобавить группу\r\n\t\t\t</PanelHeader>\r\n\r\n\t\t\t<Group>\r\n                <FormLayout>\r\n                    <FormItem top=\"Название\">\r\n                        <Input onChange={onchangeName} />\r\n                    </FormItem>\r\n                </FormLayout>\r\n\r\n                <FormItem>\r\n                    <Button size=\"l\" stretched onClick={addGroup}>Добавить группу</Button>\r\n                </FormItem>\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nAddStudyGroup.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default AddStudyGroup\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { addStudent as addStudent_action } from '../../../redux/actions/teacher-actions'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n    Group,\r\n    FormLayout,\r\n    FormItem,\r\n    Input,\r\n    Button\r\n  } from \"@vkontakte/vkui\"\r\n\r\nconst AddStudent = ({ id, go, fetchedUser, store, group_name, club_name }) => {\r\n\tconst[firstname, setFirstname] = useState('')\r\n\tconst[lastname, setLastname] = useState('')\r\n\r\n    const onChangeFirstname = e => {\r\n        setFirstname(e.currentTarget.value)\r\n    }\r\n\tconst onChangeSecondname = e => {\r\n\t\tsetLastname(e.currentTarget.value)\r\n\t}\r\n\r\n    const addStudent= () => {\r\n        const student = {\r\n            'firstname': firstname,\r\n\t\t\t'lastname': lastname,\r\n\t\t\t'id': Math.floor(Math.random() * 10000)\r\n        }\r\n        store.dispatch(addStudent_action(student, group_name, club_name))\r\n        go({'currentTarget': {'dataset': {'to': 'group'}}})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"group\"/>}\r\n            >\r\n\t\t\t\tДобавить ученика\r\n\t\t\t</PanelHeader>\r\n\r\n\t\t\t<Group>\r\n                <FormLayout>\r\n                    <FormItem top=\"Имя\">\r\n                        <Input onChange={onChangeFirstname} />\r\n                    </FormItem>\r\n\t\t\t\t\t<FormItem top=\"Фамилия\">\r\n                        <Input onChange={onChangeSecondname} />\r\n                    </FormItem>\r\n                </FormLayout>\r\n\r\n                <FormItem>\r\n                    <Button size=\"l\" stretched onClick={addStudent} data-clubid={club_name} data-groupid={group_name}>Добавить студента</Button>\r\n                </FormItem>\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nAddStudent.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tclub_name: PropTypes.string.isRequired,\r\n\tgroup_name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AddStudent;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    SimpleCell\r\n} from '@vkontakte/vkui'\r\n\r\nconst Groups = ({ go, groups, club_name }) => {\r\n\r\n    return groups.map(\r\n        (group) =>\r\n            <SimpleCell key={group.name} onClick={go} data-to=\"group\" data-clubid={club_name} data-groupid={group.name}>\r\n                {group.name ? group.name : ''}\r\n            </SimpleCell>\r\n    )\r\n}\r\n\r\nGroups.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    club_name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Groups","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Groups from '../components/Groups'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n    CellButton,\r\n    Group,\r\n    Text,\r\n    FormLayout,\r\n    FormItem,\r\n    Input,\r\n    Button,\r\n    Div,\r\n    Header\r\n  } from \"@vkontakte/vkui\"\r\n\r\n  import {\r\n    Icon28AddOutline\r\n  } from \"@vkontakte/icons\"\r\n\r\nconst Club = ({ id, go, fetchedUser, store, club_name }) => {\r\n    const getGroupsOfClub = () => {\r\n        const clubs = store.getState().teacherState.clubs\r\n        for (const club of clubs) {\r\n            if (club.name === club_name) {\r\n                return club.groups ? club.groups : null\r\n            }\r\n        }\r\n    }\r\n\r\n    const groups = getGroupsOfClub()\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"teacher_profile\"/>}\r\n            >\r\n\t\t\t\tСекция \"{club_name ? club_name : ''}\"\r\n\t\t\t</PanelHeader>\r\n\r\n            <Div>\r\n                <CellButton before={<Icon28AddOutline />} onClick={go} data-to={'teacher_addStudyGroup'} data-clubid={club_name}>Добавить учебную группу</CellButton>\r\n            </Div>\r\n\r\n            <Group\r\n                header={<Header>Мои группы</Header>}\r\n            >\r\n                {groups && groups.length > 0 &&\r\n                    <Groups go={go} groups={groups} club_name={club_name} />\r\n                }\r\n                {!groups || groups.length === 0 &&\r\n                    <Div>\r\n                        <Text>Группы отсутствуют</Text>\r\n                    </Div>\r\n                }\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nClub.propTypes = {\r\n    club_name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Club;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    SimpleCell\r\n} from '@vkontakte/vkui'\r\n\r\nconst Students = ({ go, students, club_name, group_name }) => {\r\n\r\n    return students.map(\r\n        (student) =>\r\n            <SimpleCell key={students.firstname} onClick={go} data-to=\"student_profile\" data-studentid={student.id}>\r\n                {`${student.firstname ? student.firstname : ''} ${student.lastname ? student.lastname  : ''}`}\r\n            </SimpleCell>\r\n    )\r\n}\r\n\r\nStudents.propTypes = {\r\n    students: PropTypes.array.isRequired,\r\n    club_name: PropTypes.string.isRequired,\r\n    group_name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Students","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Students from '../components/Students'\r\n\r\nimport {\r\n    PanelHeader,\r\n    Panel,\r\n    PanelHeaderBack,\r\n    CellButton,\r\n    Group,\r\n    Text,\r\n    FormLayout,\r\n    FormItem,\r\n    Input,\r\n    Button,\r\n    Div,\r\n    Header\r\n  } from \"@vkontakte/vkui\"\r\n\r\n  import {\r\n    Icon28AddOutline\r\n  } from \"@vkontakte/icons\"\r\n\r\nconst GroupOfClub = ({ id, go, fetchedUser, store, club_name, group_name }) => {\r\n    const getStudentsOfGroup = () => {\r\n        const clubs = store.getState().teacherState.clubs\r\n        for (const club of clubs) {\r\n            if (club.name === club_name) {\r\n                for (const group of club.groups)\r\n                    \r\n                    if (group.name === group_name) {\r\n                        return group.students ? group.students : null\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n    const students = getStudentsOfGroup()\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to=\"club\" data-clubid={club_name}/>}\r\n            >\r\n\t\t\t\tУченики\r\n\t\t\t</PanelHeader>\r\n\r\n            <Div>\r\n                <CellButton before={<Icon28AddOutline />} onClick={go} data-to={'teacher_addStudent'} data-clubid={club_name} data-groupid={group_name}>Добавить ученика</CellButton>\r\n            </Div>\r\n\r\n            <Group\r\n                header={<Header>Ученики группы {group_name}</Header>}\r\n            >\r\n                {students && students.length > 0 &&\r\n                    <Students go={go} students={students} club_name={club_name} group_name={group_name} />\r\n                }\r\n                {!students || students.length === 0 &&\r\n                    <Div>\r\n                        <Text>Ученики отсутствуют</Text>\r\n                    </Div>\r\n                }\r\n            </Group>\r\n\t\t</Panel>\r\n\t)\r\n};\r\n\r\nGroupOfClub.propTypes = {\r\n    club_name: PropTypes.string.isRequired,\r\n    group_name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GroupOfClub;\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport store from './redux/store/store'\n\nimport RolesSelect from './panels/RolesSelect'\n\n//Учитель\nimport TeacherProfile from './panels/teacher/Profile'\n//Формы\nimport AddClub from './panels/teacher/forms/AddClub'\nimport AddStudyGroup from './panels/teacher/forms/AddStudyGroup'\nimport AddStudent from './panels/teacher/forms/AddStudent'\n//Экраны\nimport Club from './panels/teacher/screens/Club'\nimport GroupOfClub from './panels/teacher/screens/GroupOfClub'\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('role');\n\tconst [fetchedUser, setUser] = useState(null)\n\tconst [clubId, setClubId] = useState('')\n\tconst [groupId, setGroupId] = useState('')\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tif (e.currentTarget.dataset.clubid) {\n\t\t\tsetClubId(e.currentTarget.dataset.clubid)\n\t\t}\n\t\tif (e.currentTarget.dataset.groupid) {\n\t\t\tsetGroupId(e.currentTarget.dataset.groupid)\n\t\t}\n\t\tsetActivePanel(e.currentTarget.dataset.to)\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t<RolesSelect id='role' fetchedUser={fetchedUser} go={go} store={store}/>\n\n\t\t\t\t\t<TeacherProfile id=\"teacher_profile\" fetchedUser={fetchedUser} go={go} store={store}/>\n\t\t\t\t\t<AddClub id=\"teacher_addClub\" fetchedUser={fetchedUser} go={go} store={store}/>\n\t\t\t\t\t<AddStudyGroup id=\"teacher_addStudyGroup\" fetchedUser={fetchedUser} go={go} store={store} club_name={clubId}/>\n\t\t\t\t\t<AddStudent id=\"teacher_addStudent\" fetchedUser={fetchedUser} go={go} store={store} club_name={clubId} group_name={groupId}/>\n\t\t\t\t\t<Club id=\"club\" fetchedUser={fetchedUser} go={go} store={store} club_name={clubId} />\n\t\t\t\t\t<GroupOfClub id=\"group\" fetchedUser={fetchedUser} go={go} store={store} club_name={clubId} group_name={groupId}/>\n\t\t\t\t\t\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}